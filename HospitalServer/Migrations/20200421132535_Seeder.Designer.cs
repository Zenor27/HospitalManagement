// <auto-generated />
using System;
using HospitalServer.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalServer.Migrations
{
    [DbContext(typeof(ApplicationDatabaseContext))]
    [Migration("20200421132535_Seeder")]
    partial class Seeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalServer.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("StaffId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Date = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Description = "Rendez-Vous classique",
                            PatientId = 1,
                            StaffId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Date = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Description = "Rendez-Vous classique",
                            PatientId = 1,
                            StaffId = 1,
                            Status = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Date = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Description = "Rendez-Vous classique",
                            PatientId = 2,
                            StaffId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Date = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Description = "Rendez-Vous classique",
                            PatientId = 2,
                            StaffId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Date = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Description = "Rendez-Vous classique",
                            PatientId = 3,
                            StaffId = 2,
                            Status = 2
                        });
                });

            modelBuilder.Entity("HospitalServer.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Description = "Alerte COVID-19. Restez prudent."
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 799, DateTimeKind.Local).AddTicks(7030),
                            Description = "Portez des masques. Restez prudent."
                        });
                });

            modelBuilder.Entity("HospitalServer.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "EPITA",
                            Background = "Troubles psychologiques",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 798, DateTimeKind.Local).AddTicks(7021),
                            FirstName = "Denis",
                            LastName = "Lastname",
                            PhoneNumber = "0000000000"
                        },
                        new
                        {
                            Id = 2,
                            Address = "EPITA",
                            Background = "Troubles psychologiques",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 798, DateTimeKind.Local).AddTicks(7021),
                            FirstName = "Sylvie",
                            LastName = "Lastname",
                            PhoneNumber = "0000000000"
                        },
                        new
                        {
                            Id = 3,
                            Address = "EPITA",
                            Background = "Troubles psychologiques",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 798, DateTimeKind.Local).AddTicks(7021),
                            FirstName = "Antoine",
                            LastName = "Login",
                            PhoneNumber = "0000000000"
                        },
                        new
                        {
                            Id = 4,
                            Address = "EPITA",
                            Background = "Troubles psychologiques",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 798, DateTimeKind.Local).AddTicks(7021),
                            FirstName = "Xavier",
                            LastName = "Login",
                            PhoneNumber = "0000000000"
                        });
                });

            modelBuilder.Entity("HospitalServer.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "14 Rue de Villejuif, 94800 Villejuif",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 794, DateTimeKind.Local).AddTicks(6983),
                            FirstName = "Antoine",
                            LastName = "Lastname",
                            PhoneNumber = "0707070707",
                            StaffType = 0
                        },
                        new
                        {
                            Id = 2,
                            Address = "14 Rue de Villejuif, 94800 Villejuif",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 797, DateTimeKind.Local).AddTicks(7012),
                            FirstName = "Gauthier",
                            LastName = "Lastname",
                            PhoneNumber = "0707070707",
                            StaffType = 0
                        },
                        new
                        {
                            Id = 3,
                            Address = "14 Rue de Villejuif, 94800 Villejuif",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 797, DateTimeKind.Local).AddTicks(7012),
                            FirstName = "Julien",
                            LastName = "Lastname",
                            PhoneNumber = "0707070707",
                            StaffType = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "14 Rue de Villejuif, 94800 Villejuif",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 797, DateTimeKind.Local).AddTicks(7012),
                            FirstName = "Louis",
                            LastName = "Lastname",
                            PhoneNumber = "0707070707",
                            StaffType = 2
                        },
                        new
                        {
                            Id = 5,
                            Address = "14 Rue de Villejuif, 94800 Villejuif",
                            CreatedAt = new DateTime(2020, 4, 21, 15, 25, 34, 797, DateTimeKind.Local).AddTicks(7012),
                            FirstName = "Albert",
                            LastName = "Login",
                            PhoneNumber = "0707070707",
                            StaffType = 3
                        });
                });

            modelBuilder.Entity("HospitalServer.Models.Appointment", b =>
                {
                    b.HasOne("HospitalServer.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalServer.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
